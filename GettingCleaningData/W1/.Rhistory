add2 <- function(x, y) {
x + y
}
add2(3, 5)
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x, 12)
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
airquality()
dir()
airquality <- read.csv("D:/Cursos/Coursera/DataScience/WORKING_DIRECTORY/hw1_data.csv")
airquality()
airquality <- read.csv("D:/Cursos/Coursera/DataScience/WORKING_DIRECTORY/hw1_data.csv")
airquality
function(airquality)
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE)
mydata <- rnorm(100)
sd(mydata)
sd(x = mydata)
sd(x = mydata, na.rm = FALSE)
argm(lm)
arg(lm)
args(lm)
args(plot)
x <- rnorm(100)
y <- rnorm(100)
plot(x, y)
hist(x)
hist(y)
cor(x, y)
q()
x <- 1
print(x)
x
msg <- "hello"
x <-
x
x, msg
s; msg
## Incomplete expression
x <- ## Incomplete expression
x <- 5 ## noting printed
x
print(x)
x
x <- 1:20
x
x <- c(0.5, 0.6)
x
x <- c(TRUE, FALSE)
x
x <- c(1+0i, 2,4i)
x
y <- c(1.7, "a")
y
y <- c(TRUE, "a")
y
x <- 1:6
as.character(x)
as.numeric(x)
x <- a:c
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
x <- 1:3
y <- 10:12
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x
x <- 1:3
names(x)
names(x) <- c("foo", "bar", "norf")
x
names(x)
x <- list(a=1, b=2, c=3)
x
names(x)
x <- c("a", "b", "c", "d", "a")
x[1]
x[1:4]
x <- matrix (1:6, 2, 3)
x
x[1,2]
x <- matrix (1:6, 2,3)
x
x[1,]
x[1,, drop = FALSE]
x <- list(foo = 1:4, bar = 0.6)
x <- list(foo = 1:4, bar = 0.6, baz = "hello")
x[c(1,3)]
x <- c(1, 2, NA, 4, NA, 5)
bad <- is.na(x)
x[!bad]
bad
q()
mydata <- rnorm(100)
sd(mydata)
args(lm)
lm(mydata)
lm(data = mydata, y - x, model)
lm(data = mydata, y - x, model)
f <- function(a, b = 1, c = 2, d = NULL)
{}
f(1)
f <- function(a, b) {
a^2
}
f(2)
f <- function(a, b) {
a^2
b83
}
search()
q()
swirl()
swirl()
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files()
?list.files
args(list.files)
old.dir <- getwd
old.dir <- getwd()
?md
dir.create(testdir)
?dir.create
dir.create("testdir")
set.wd("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
lis.files()
list.files()
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
dir()
file.path("mytest3.R")
dir.create("testdir2/testdir3")
dir.create("testdir2/testdir3", recursive = TRUE)
file.remove("mytest2.R")
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
q()
bad <- is.na(housingData$VAL)
old.wd <- getwd()
new.wd <- ("D:/Cursos/Coursera/DataScience/GettingAndCleaningData/W1")
setwd(new.wd)
list.files("data")
housingData <- read.csv("./data/housing.csv", sep = ",", header = TRUE)
head(housingData)
bad <- is.na(housingData$VAL)
housingData$VAL > 01 & housingData$VAL(!bad)
housingData[[housingData$VAL > 01 & housingData$VAL(!bad)]]
housingData[housingData$VAL > 01 & housingData$VAL(!bad)]
housingData[housingData$VAL > 01]
housingData[[housingData$VAL > 01]]
housingData$VAL[[housingData$VAL > 01]]
housingData$VAL[housingData$VAL > 01]
housingData$VAL[housingData$VAL(!bad)]
housingData$VAL[housingData$VAL == !bad)]
housingData$VAL[housingData$VAL == !bad]
housingData$VAL[housingData$VAL > 01 & housingData$VAL == !bad]
housingData$VAL[housingData$VAL > 01 & housingData$VAL == !bad]
housingData$VAL[housingData$VAL > 01 & housingData$VAL == bad]
bad
housingData$VAL(!bad)
bad
sum(housingData$VAL == 24)
housingData$VAL == 24
housingData$VAL == !bad
bad
housingData$VAL[housingData$VAL > 01 & housingData$VAL == bad]
housingData$VAL[housingData$VAL == 24 & housingData$VAL == bad]
housingData$VAL == 24
housingData$VAL == 24
?subset
housingData$VAL[housingData$VAL == 24 & !is.na(housingData$VAL)]
str(housingData$VAL[housingData$VAL == 24 & !is.na(housingData$VAL)])
housingData$VAL[housingData$VAL == 24 & !is.na(housingData$VAL)]
summary(housingData$VAL[housingData$VAL == 24 & !is.na(housingData$VAL)])
housingData$VAL[housingData$VAL == 24 & !is.na(housingData$VAL)]
setwd(old.wd)
old.wd <- getwd()
new.wd <- ("D:/Cursos/Coursera/DataScience/GettingAndCleaningData/W1")
setwd(new.wd)
if (!file.exists("data")) {
dir.create("data")
}
wd
wd()
old.wd
new.wd
fileUrl <- ("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
download.file(fileUrl, destfile = "data/ngap.xlsx")
list.files("data")
dateDownloaded <- date()
dateDownloaded
library(xlsx)
install.package(xlsx)
?install
?install.packages
install.packages(xlsx)
?xlsx
install.packages(xlsx)
read.xlsx
?read.xlsx
install.packages("xlsx")
?xlsx
?read.xlsx
library(xlsx)
?xlsx
ngapData <- read.xlxs("/data/ngap.xlsx", sheetIndex = 1, header = TRUE)
ngapData <- read.xlsx("/data/ngap.xlsx", sheetIndex = 1, header = TRUE)
ngapData <- read.xlsx("./data/ngap.xlsx", sheetIndex = 1, header = TRUE)
fileUrl <- ("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
download.file(fileUrl, destfile = "data/gov_NGAP.xlsx", method = "curl")
download.file(fileUrl, destfile = "data/gov_NGAP.xlsx")
list.files("data")
download.file(fileUrl, destfile = "data/gov_NGAP.xlsx", mode = "wb")
list.files("data")
ngapData <- read.xlsx("./data/ngap.xlsx", sheetIndex = 1, header = TRUE)
colIndex <- 7:15
rowIndex <- 18:23
dat <- read.xlsx("./data/ngap.xlsx", sheetIndex = 1, header = TRUE, colIndex = colIndex, rowIndex = rowIndex)
dat <- read.xlsx("./data/gov_NGAP.xlsx", sheetIndex = 1, header = TRUE, colIndex = colIndex, rowIndex = rowIndex)
head(dat)
sum(dat$Zip*dat$Ext,na.rm=T)
setwd(old.wd)
save.image("D:/Cursos/Coursera/DataScience/GettingAndCleaningData/W1/Q1_Download_EXCEL.RData")
old.wd <- getwd()
new.wd <- ("D:/Cursos/Coursera/DataScience/GettingAndCleaningData/W1")
setwd(new.wd)
library(XML)
install.packages(XML)
install.packages("XML")
library(XML)
fileUrl <- ("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
fileUrl <- ("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
dateDownloaded <- date()
dateDownloaded
rootNood <- xmlRoot(doc)
save.image("D:/Cursos/Coursera/DataScience/GettingAndCleaningData/W1/Q1_Download_XML.RData")
rootNood
zipcode(rootNood)
rootNode <- xmlRoot(doc)
rootNode
xmlName(rootNode)
xmlzipcode(rootNode)
names(rootNode)
zipcode(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
rootNode[[1]][[1]][[2]]
xmlname(rootNode)
xmlName(rootNode)
xmlZipcode(rootNode)
rootNode[[1]][[1]][[2]]
rootNode[[1]][[1]][[2]] == 21231
/node
xpathSApply(rootNode, "//zipcode", xmlValue)
xpathSApply(rootNode, "//zipcode" == , xmlValue)
xpathSApply(rootNode, "//zipcode" == 21231, xmlValue)
zipcode <- (xpathSApply(rootNode, "//zipcode", xmlValue))
zipcode ==
zipcode == 21231
zipcode
zipcode == 21231
zipcode(21231)
zipcode("21231")
zipcode[zipcode == 21231]
?fread
save.image("D:/Cursos/Coursera/DataScience/GettingAndCleaningData/W1/Q1_Download_XML.RData")
