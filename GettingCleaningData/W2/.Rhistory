add2 <- function(x, y) {
x + y
}
add2(3, 5)
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x, 12)
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
airquality()
dir()
airquality <- read.csv("D:/Cursos/Coursera/DataScience/WORKING_DIRECTORY/hw1_data.csv")
airquality()
airquality <- read.csv("D:/Cursos/Coursera/DataScience/WORKING_DIRECTORY/hw1_data.csv")
airquality
function(airquality)
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE)
mydata <- rnorm(100)
sd(mydata)
sd(x = mydata)
sd(x = mydata, na.rm = FALSE)
argm(lm)
arg(lm)
args(lm)
args(plot)
x <- rnorm(100)
y <- rnorm(100)
plot(x, y)
hist(x)
hist(y)
cor(x, y)
q()
x <- 1
print(x)
x
msg <- "hello"
x <-
x
x, msg
s; msg
## Incomplete expression
x <- ## Incomplete expression
x <- 5 ## noting printed
x
print(x)
x
x <- 1:20
x
x <- c(0.5, 0.6)
x
x <- c(TRUE, FALSE)
x
x <- c(1+0i, 2,4i)
x
y <- c(1.7, "a")
y
y <- c(TRUE, "a")
y
x <- 1:6
as.character(x)
as.numeric(x)
x <- a:c
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
x <- 1:3
y <- 10:12
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x
x <- 1:3
names(x)
names(x) <- c("foo", "bar", "norf")
x
names(x)
x <- list(a=1, b=2, c=3)
x
names(x)
x <- c("a", "b", "c", "d", "a")
x[1]
x[1:4]
x <- matrix (1:6, 2, 3)
x
x[1,2]
x <- matrix (1:6, 2,3)
x
x[1,]
x[1,, drop = FALSE]
x <- list(foo = 1:4, bar = 0.6)
x <- list(foo = 1:4, bar = 0.6, baz = "hello")
x[c(1,3)]
x <- c(1, 2, NA, 4, NA, 5)
bad <- is.na(x)
x[!bad]
bad
q()
mydata <- rnorm(100)
sd(mydata)
args(lm)
lm(mydata)
lm(data = mydata, y - x, model)
lm(data = mydata, y - x, model)
f <- function(a, b = 1, c = 2, d = NULL)
{}
f(1)
f <- function(a, b) {
a^2
}
f(2)
f <- function(a, b) {
a^2
b83
}
search()
q()
swirl()
swirl()
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files()
?list.files
args(list.files)
old.dir <- getwd
old.dir <- getwd()
?md
dir.create(testdir)
?dir.create
dir.create("testdir")
set.wd("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
lis.files()
list.files()
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
dir()
file.path("mytest3.R")
dir.create("testdir2/testdir3")
dir.create("testdir2/testdir3", recursive = TRUE)
file.remove("mytest2.R")
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
q()
library(MySQL)
library(RMySQL)
ucsDB <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb)
ucscDB <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb)
ucscDB <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
result
install.packages("httpuv")
library("httpuv")
library("httr")
library(jsonlite)
oauth_endpoints("github")
myapp = oauth_app("myApplication", key="b1cb4c2d9422dcdc67b3",secret="46f2923706005f32791cbaa643d7ee4fe6dc41af")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
names(json2)
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
dim(json2)
names(json2)
names(json2$created_at)
json2$created_at
json2$name
json2$name[5]
json2$created_at[5]
old.wd <- getwd()
new.wd <- ("D:/Cursos/Coursera/DataScience/GettingAndCleaningData/W2")
setwd(new.wd)
install.packages("sqldf")
library(sqldf)
if (!file.exists("data")) {
dir.create("data")
}
fileUrl <- ("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
fileUrl <- ("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
download.file(fileUrl, destfile = "data/AmericanComunitySurvey.csv", mode = "wb")
list.files("data")
dateDownloaded <- date()
dateDownloaded
save.image("D:/Cursos/Coursera/DataScience/GettingAndCleaningData/W2/q2_2_env.RData")
?read.csv
acs <- read.csv("data/AmericanComunitySurvey.csv", header = TRUE)
head(acs)
names(acs)
query("select * from acs where AGEP < 50 and pwgtp1")
query <- ("select * from acs where AGEP < 50 and pwgtp1")
acs_sub <-sqldf(query)
acs_sub
acs$pwgtp1
acs_sub$pwgtp1
names(acs_sub)
acs_sub$pwgtp
acs$pwgtp
query <- ("select pwgtp1 from acs where AGEP < 50")
acs_sub <- sqldf(query)
acs_sub
save.image("D:/Cursos/Coursera/DataScience/GettingAndCleaningData/W2/q2_2_env.RData")
save.image("D:/Cursos/Coursera/DataScience/GettingAndCleaningData/W2/q2_3_env.RData")
query <- ("select unique AGEP from acs")
acs_sub <- sqldf(query)
query <- ("select distinct AGEP from acs")
acs_sub <- sqldf(query)
acs_sub
save.image("D:/Cursos/Coursera/DataScience/GettingAndCleaningData/W2/q2_3_env.RData")
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
save.image("D:/Cursos/Coursera/DataScience/GettingAndCleaningData/W2/q2_4_env.RData")
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
con = url
htmlCode[10] = readLines(con)
htmlCode[10:10] = readLines(con)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
con = url
htmlCode = readLines(con)
close(con)
htmlCode
htmlCode[10]
nchar(htmlCode[10])
?nchar
nchar(htmlCode[10], htmlCode[20], htmlCode[30], htmlCode[100])
vector <- cbind(htmlCode[10], htmlCode[20], htmlCode[30], htmlCode[100])
vector
nchar(vector)
save.image("D:/Cursos/Coursera/DataScience/GettingAndCleaningData/W2/q2_4_env.RData")
?read.for
?read.fwf
fileUrl <- ("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
download.file(fileUrl, destfile = "data/wksst8110.for", mode = "wb")
list.files("data")
dateDownloaded <- date()
dateDownloaded
dat <- read.fwf("data/wksst8110.for", header = TRUE)
dat <- read.fwf("data/wksst8110.for", header = TRUE, widths = c(4,5))
dat <- read.fwf("data/wksst8110.for", header = TRUE, widths = c(5))
dat
head(dat)
dat <- read.fwf("data/wksst8110.for", header = TRUE, widths = c(5), skip = 1)
dat <- read.fwf("data/wksst8110.for", header = TRUE, widths = c(5))
dat <- read.fwf("data/wksst8110.for", header = TRUE, widths = c(1:5))
dat <- read.fwf("data/wksst8110.for", header = TRUE, widths = c(1,2,3,4,5))
dat <- read.fwf("data/wksst8110.for", header = TRUE, widths = c(4))
unlink(dat)
head(dat)
dat_4 <- read.fwf("data/wksst8110.for", header = TRUE, widths = c(4))
dat_9 <- read.fwf("data/wksst8110.for", header = TRUE, widths = c(4))
dat_9 <- read.fwf("data/wksst8110.for", header = TRUE, widths = c(9))
head(dat_9)
dat_4 <- read.fwf("data/wksst8110.for", widths = c(4))
head(dat_4)
dim(dat)
dat_4 <- read.fwf("data/wksst8110.for", widths = c(-4, 5))
DAT_4
dat_4
dat <- read.fwf("data/wksst8110.for", widths = c(-4, 5))
head(at)
head(dat)
head(dat_1)
dat_1 <- read.fwf("data/wksst8110.for", widths = c(-4))
dat_2 <- read.fwf("data/wksst8110.for", header = TRUE, widths = c(-9))
dat_1 <- read.fwf("data/wksst8110.for", widths = -4)
dat_1 <- read.fwf("data/wksst8110.for", widths = 4)
head(dat_1)
dat_1 <- read.fwf("data/wksst8110.for", widths = -4)
dat_1 <- read.fwf("data/wksst8110.for", widths = c(1,-4,2)
)
head(dat_1)
dat_1 <- read.fwf("data/wksst8110.for", widths = c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4))
head(dat_1)
dat_1 <- read.fwf("data/wksst8110.for", widths = c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip = 4)
head(dat_1)
?sum()
sum(dat_1$V4, na.rm = T)
